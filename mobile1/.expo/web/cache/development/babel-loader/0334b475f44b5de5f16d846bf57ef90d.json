{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP8440P\\\\Desktop\\\\AirCnC\\\\mobile\\\\src\\\\components\\\\SpotList.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { withNavigation } from 'react-navigation';\nimport api from \"../services/api\";\n\nfunction SpotList(_ref) {\n  var tech = _ref.tech,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      spots = _useState2[0],\n      setSpots = _useState2[1];\n\n  useEffect(function () {\n    function loadSpots() {\n      var response;\n      return _regeneratorRuntime.async(function loadSpots$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(api.get('/spots', {\n                params: {\n                  tech: tech\n                }\n              }));\n\n            case 2:\n              response = _context.sent;\n              setSpots(response.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadSpots();\n  }, []);\n\n  function handleNavigate() {\n    navigation.navigate('Book');\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \" Empresas que usam \", tech), React.createElement(FlatList, {\n    style: styles.list,\n    data: spots,\n    keyExtractor: function keyExtractor(spot) {\n      return spot._id;\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: styles.thumbnail,\n        source: {\n          uri: item.thumbnail_url\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: styles.company,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, item.company), React.createElement(Text, {\n        style: styles.company,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, item.price ? \"R$\" + item.price + \"/dia\" : 'GRATUITO'), React.createElement(TouchableOpacity, {\n        onPress: handleNavigate(),\n        style: styles.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, \" Solicitar reserva\")));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 30\n  },\n  title: {\n    fontSize: 20,\n    color: '#444',\n    paddingHorizontal: 20,\n    marginBottom: 15\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  list: {\n    paddingHorizontal: 20\n  },\n  listItem: {\n    marginRight: 15\n  },\n  thumbnail: {\n    width: 200,\n    height: 120,\n    resizeMode: 'cover',\n    borderRadius: 2\n  },\n  company: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333',\n    marginTop: 10\n  },\n  price: {\n    fontSize: 15,\n    color: '#999',\n    marginTop: 5\n  },\n  button: {\n    height: 32,\n    backgroundColor: '#f05a5b',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 2,\n    marginTop: 15\n  },\n  buttonText: {\n    color: '#FFF',\n    fontWeight: 'bold',\n    fontSize: 15\n  }\n});\nexport default withNavigation(SpotList);","map":{"version":3,"sources":["C:/Users/HP8440P/Desktop/AirCnC/mobile/src/components/SpotList.js"],"names":["React","useState","useEffect","withNavigation","api","SpotList","tech","navigation","spots","setSpots","loadSpots","get","params","response","data","handleNavigate","navigate","styles","container","title","list","spot","_id","item","listItem","thumbnail","uri","thumbnail_url","company","price","button","buttonText","StyleSheet","create","marginTop","fontSize","color","paddingHorizontal","marginBottom","bold","fontWeight","marginRight","width","height","resizeMode","borderRadius","backgroundColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {View, Text,Image, StyleSheet, FlatList, TouchableOpacity} from 'react-native'\r\nimport {withNavigation} from 'react-navigation'\r\n\r\nimport api from '../services/api'\r\n\r\n function SpotList({tech, navigation}){\r\n    const [spots, setSpots] = useState([])\r\n    useEffect(() => {\r\n        async function loadSpots(){\r\n            const response = await api.get('/spots',{\r\n                params: {tech}\r\n            })\r\n\r\n            setSpots(response.data)\r\n        }\r\n        loadSpots()\r\n    }, [])\r\n\r\n    function handleNavigate(){\r\n        navigation.navigate('Book')\r\n    }\r\n\r\n    return (\r\n        \r\n        <View style ={styles.container}>\r\n            <Text style ={styles.title}> Empresas que usam {tech}</Text>\r\n        \r\n\r\n        <FlatList \r\n            style ={styles.list}\r\n            data ={spots}\r\n            keyExtractor = {spot => spot._id}\r\n            horizontal\r\n            showsHorizontalScrollIndicator ={false}\r\n            renderItem ={({ item }) =>(\r\n                <View style ={ styles.listItem}>\r\n                    <Image style ={styles.thumbnail} source ={{uri: item.thumbnail_url}} />\r\n                    <Text style={styles.company}>{item.company}</Text>\r\n                    <Text style={styles.company}>{item.price ? `R$${item.price}/dia` : 'GRATUITO'}</Text>\r\n                    <TouchableOpacity onPress ={handleNavigate()} style ={styles.button}>\r\n                        <Text style ={styles.buttonText}> Solicitar reserva</Text>\r\n\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n        />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: 30,\r\n    },\r\n\r\n    title: {\r\n        fontSize: 20,\r\n        color: '#444',\r\n        paddingHorizontal:20,\r\n        marginBottom: 15,       \r\n    },\r\n\r\n    bold: {\r\n        fontWeight: 'bold'\r\n    },\r\n\r\n    list: {\r\n        paddingHorizontal: 20,\r\n    },\r\n\r\n    listItem:{\r\n        marginRight: 15,\r\n    },\r\n\r\n    thumbnail:{\r\n        width: 200,\r\n        height: 120,\r\n        resizeMode: 'cover',\r\n        borderRadius: 2\r\n    },\r\n\r\n    company: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        color: '#333',\r\n        marginTop: 10\r\n        \r\n    },\r\n\r\n    price: {\r\n        fontSize: 15,\r\n        color: '#999',\r\n        marginTop: 5\r\n    },\r\n\r\n    button: {\r\n        height: 32,\r\n        backgroundColor: '#f05a5b',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 2,\r\n        marginTop: 15,\r\n    },\r\n\r\n    buttonText: {\r\n        color: '#FFF',\r\n        fontWeight: 'bold',\r\n        fontSize: 15,\r\n    },\r\n    \r\n})\r\n\r\nexport default withNavigation(SpotList)"]},"metadata":{},"sourceType":"module"}